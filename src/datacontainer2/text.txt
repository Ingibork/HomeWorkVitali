DataContainer:
1. Создать класс DataContainer у которого есть один дженерик (обобщение). Например T.
2. Внутри DataContainer есть поле T[] которое предназначено для хранения передаваемых объектов.
3. Данный класс будет служить для хранения неограниченного количества объектов передаваемых
через метод int add(T item). Данный метод сохраняет переданный item внутри DataContainer'а и
возвращает index данного элемента.
4. Метод int add(T item) добавляет данные в первую свободную позицию в массиве.
В случае если массив будет переполнен нужно придумать механизм который будет расширять
пространство для новых элементов.
4. В данном классе должен быть метод T get(int index). Данный метод получает из DataContainer'а
 предварительно сохранённый объект в нём (переданный через add).
5. В данном классе должен быть метод T[] getItems(). Данный метод возвращает массив всех
 переданных объектов.
6. Добавить метод boolean delete(int index) который будет удалять элемент массива по индексу.
 Метод возвращает true если у нас получилось удалить данные, false если нет (нет такого индекса).
  Овободивщиуюся ячейку необходимо удалить полностью. Пустых элементов не должно быть.
7. Добавить метод boolean delete(E item) который будет удалять элемент массива по элементу.
Метод возвращает true если у нас получилось удалить данные, false если нет (нет такого элемента).
 Овободивщиуюся ячейку необходимо удалить полностью. Пустых элементов не должно быть.
8.* В даном классе должен быть СТАТИЧЕСКИЙ метод sort() который будет принимать объект
DataContainer с дженериком extends Comparable. Данный метод будет сортировать элементы
в ПЕРЕДАННОМ объекте DataContainer используя реализацию сравнения из хранимых объектов.
Тут вам надо САМОСТОЯТЕЛЬНО изучить для чего нужен интерфейс Comparable и сообразить
как им пользоваться в данном задании.
9.** В даном классе должен быть СТАТИЧЕСКИЙ метод sort() который будет принимать объект
DataContainer и реализациию интерфейса Comparator. Данный метод будет сортировать элементы в
 ПЕРЕДАННОМ объекте DataContainer используя реализацию сравнения из ПЕРЕДАННОГО объекта
 интерфейса Comparator. Тут вам надо САМОСТОЯТЕЛЬНО изучить для чего нужен интерфейс
  Comparator и сообразить как им пользоваться в данном задании